# roles/user_miniconda/tasks/main.yml

- name: "Ensure target installation parent directory exists (e.g., {{ ansible_env.HOME }})"
  ansible.builtin.file:
    path: "{{ miniconda_install_path | dirname }}" # Ensures the parent dir like /home/michael exists
    state: directory
    mode: '0755'

- name: "Check if Miniconda is already installed at {{ miniconda_install_path }}"
  ansible.builtin.stat:
    path: "{{ miniconda_install_path }}/bin/conda"
  register: miniconda_binary_stat

- name: "Download Miniconda installer script"
  when: not miniconda_binary_stat.stat.exists
  ansible.builtin.get_url:
    url: "{{ miniconda_installer_url }}"
    dest: "/tmp/{{ miniconda_installer_script_name }}"
    mode: '0755' # Make installer executable
  register: download_miniconda_script_result

- name: "Install Miniconda to {{ miniconda_install_path }}"
  when: not miniconda_binary_stat.stat.exists and download_miniconda_script_result.changed
  ansible.builtin.command:
    cmd: "bash /tmp/{{ miniconda_installer_script_name }} -b -p {{ miniconda_install_path }}"
  args:
    creates: "{{ miniconda_install_path }}/bin/conda" # Idempotency: only run if conda binary doesn't exist
  changed_when: true # Assume installer makes changes if it runs

- name: "Initialize Miniconda for user {{ ansible_user_id }} for specified shells"
  # This task should ideally run if Miniconda was just installed OR if not yet initialized.
  # 'conda init' itself is somewhat idempotent for adding blocks to rc files.
  ansible.builtin.command:
    cmd: "{{ miniconda_install_path }}/bin/conda init {{ miniconda_init_shells | join(' ') }}"
  environment: # Ensure conda init runs in the correct user context
    HOME: "{{ ansible_env.HOME }}"
    USER: "{{ ansible_user_id }}"
  changed_when: true # 'conda init' modifies shell configuration files
  when: not miniconda_binary_stat.stat.exists or download_miniconda_script_result.changed # Run if we just installed
  # For more robust idempotency on re-runs, you might check if .bashrc/.zshrc already have conda blocks.

- name: "Clean up Miniconda installer script"
  ansible.builtin.file:
    path: "/tmp/{{ miniconda_installer_script_name }}"
    state: absent
  when: download_miniconda_script_result.changed # Only clean up if we downloaded
